@model UserEditVM


@{
    ViewBag.Title = "EditUser";
    Layout = "~/Views/Shared/_Dashboard.cshtml";
    string photoURL = Model.photoURL;
}

@section head{
    <style>
        .form-control:focus {
            box-shadow: none;
            border-color: #BA68C8
        }

        .profile-button {
            background: rgb(99, 39, 120);
            box-shadow: none;
            border: none
        }

            .profile-button:hover {
                background: #682773
            }

            .profile-button:focus {
                background: #682773;
                box-shadow: none
            }

            .profile-button:active {
                background: #682773;
                box-shadow: none
            }

        .back:hover {
            color: #682773;
            cursor: pointer
        }

        .labels {
            font-size: 11px
        }

        .add-experience:hover {
            background: #BA68C8;
            color: #fff;
            cursor: pointer;
            border: solid 1px #BA68C8
        }
    </style>
}

<form class="form" method="post" enctype="multipart/form-data">
    @Html.ValidationSummary(true)
    <div class="container rounded bg-white mt-5 mb-5">
        <div class="row">
            <div class="col-md-3 border-right">
                <div class="d-flex flex-column align-items-center text-center p-3 py-5">
                    <label class="upload">
                        <img class="img-thumbnail" src="~/Images/@photoURL">
                        @Html.TextBoxFor(u => u.Photo, new
                        {
                       type = "file",
                            accept = "image/jpeg, image/png",
                       hidden = ""
                        })
                        @Html.ValidationMessageFor(u => u.Photo)
                    </label>
                </div>
            </div>

            <div class="col-md-5 border-right">
                <div class="p-3 py-5">
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <h4 class="text-right">Add User</h4>
                    </div>
                    <div class="row mt-2">
                        <div class="col-md-6">
                            @Html.LabelFor(u => u.name, "Name")@Html.TextBoxFor(u => u.name, new { maxlength = 20, autofocus = "", @class = "form-control", placeholder = "Name" }) @Html.ValidationMessageFor(u => u.name)
                        </div>
                        <div class="col-md-6">
                            @Html.LabelFor(u => u.contact_no, "Contact Number")@Html.TextBoxFor(u => u.contact_no, new { @class = "form-control", placeholder = "XXX-XXXXXXX" }) @Html.ValidationMessageFor(u => u.contact_no)
                        </div>
                    </div>
                    <div class="row mt-2">
                        <div class="col-md-12">
                            @Html.LabelFor(u => u.email, "Email Address") @Html.TextBoxFor(u => u.email, new { @class = "form-control", placeholder = "jun@gmail.com" })
                            @Html.ValidationMessageFor(u => u.email)
                        </div>
                    </div>
                    <div class="row mt-4">
                        <div class="col-md-12">
                            @Html.LabelFor(u => u.username, "Username")@Html.TextBoxFor(u => u.username, new { type = "text", @class = "form-control", @disabled ="disabled" })
                            @Html.ValidationMessageFor(u => u.username)
                        </div>
                    </div>
                    <div class="row mt-4">
                        <div class="col-md-6">
                            @Html.LabelFor(u => u.password, "Password")@Html.TextBoxFor(u => u.password, new { type = "password", @class = "form-control" })
                            @Html.ValidationMessageFor(u => u.password)
                        </div>
                        <div class="col-md-6">
                            @Html.LabelFor(u => u.confirmPassword, "Confirm Password")@Html.TextBoxFor(u => u.confirmPassword, new { type = "password", @class = "form-control" })
                            @Html.ValidationMessageFor(u => u.confirmPassword)
                        </div>
                    </div>
                    <div class="row mt-4">
                        <div class="col-md-4">

                            @Html.LabelFor(u => u.role, "Role") @Html.DropDownListFor(u => u.role, new SelectList(Enum.GetValues(typeof(Role))), "-Choose One-", new { @class = "btn btn-secondary dropdown-toggle" })
                            @Html.ValidationMessageFor(u => u.role)
                        </div>
                    </div>
                    <div class="mt-5 text-center"><section><button class="btn btn-primary profile-button">Edit User</button></section></div>
                </div>
            </div>
        </div>
    </div>
</form>



@section foot{

    <script>

    function validatePhoto(f) {
        let retype = /^image\/(jpeg|png)$/i;
        let reName = /^.+\.(png|jpg|jpeg)$/i;
        return f &&
            f.size <= 1 * 1024 * 1024 &&
            retype.test(f.type) &&
            reName.test(f.name);
    }

    let src = null;
    $('.upload input').change(u => {
        let f = u.target.files[0];
        let img = $(u.target).siblings('img')[0];

        if (!src) src = img.src;

        if (validatePhoto(f)) {

            img.src = URL.createObjectURL(f);

        } else {
            img.src = src;
            u.target.value = '';
        }

    });

    </script>
}

