@model EventInsertVM


@{
    ViewBag.Title = "Insert";
    Layout = "~/Views/Shared/_Dashboard.cshtml";
    string min = DateTime.Today.ToString("dd-MM-yyyy");
    string max = DateTime.Today.AddMonths(+12).ToString("dd-MM-yyyy");
    string endDateMax = DateTime.Today.AddDays(+24).ToString("dd-MM-yyyy");
}

<form class="form" method="post" enctype="multipart/form-data">
    @Html.ValidationSummary(true)
    <div class="container rounded bg-white mt-5 mb-5">
        <div class="row">
            <div class="col-md-3 border-right">
                <div class="d-flex flex-column align-items-center text-center p-3 py-5">
                    <label class="upload">
                        <img class="img-thumbnail" src="~/Photo/no-image-icon-23499.png">
                        @Html.TextBoxFor(e => e.Photo, new
                        {
                       type = "file",
                            accept = "image/jpeg, image/png",
                       hidden = ""
                        })
                        @Html.ValidationMessageFor(e => e.Photo)
                    </label>
                </div>
            </div>

            <div class="col-md-5 border-right">
                <div class="p-3 py-5">
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <h4 class="text-right">Add Event</h4>
                    </div>
                    <div class="row mt-2">
                        <div class="col-md-6">
                            @Html.LabelFor(e => e.name, "Name")@Html.TextBoxFor(e => e.name, new { maxlength = 20, autofocus = "", @class = "form-control", placeholder = "Name" }) @Html.ValidationMessageFor(e => e.name)
                        </div>
                        <div class="col-md-6">
                            @Html.LabelFor(e => e.price, "Price")@Html.TextBoxFor(e => e.price, new { type = "number", @class = "form-control", placeholder = "price", min = "0" }) @Html.ValidationMessageFor(e => e.price)
                        </div>
                    </div>
                    <div class="row mt-2">
                        <div class="col-md-12">
                            @Html.LabelFor(e => e.des, "Description")@Html.TextAreaFor(e => e.des, new
{
style = "width: 400px; height: 200px; resize: none",
@class = "form-control",
autofocus = "",
placeholder = "Description"
})
                            @Html.ValidationMessageFor(e => e.des)

                        </div>
                    </div>
                    <div class="row mt-4">
                        <div class="col-md-6">
                            @Html.LabelFor(e => e.availability, "Availability")@Html.TextBoxFor(e => e.availability, new { type = "number", @class = "form-control", placeholder = "Availability", min = "0" })
                            @Html.ValidationMessageFor(e => e.availability)
                        </div>
                        <div class="col-md-6">
                            @Html.LabelFor(e => e.participants, "Participants")@Html.TextBoxFor(e => e.participants, new { type = "number", @class = "form-control", placeholder = "participants", min = "0" })
                            @Html.ValidationMessageFor(e => e.participants)
                        </div>
                        <div class="col-md-6">
                            @Html.LabelFor(e => e.startDate, "Start Date")@Html.TextBoxFor(e => e.startDate, "{0:yyyy-MM-dd}", new { type = "date", @class = "form-control" })
                            @*<small>(@min to @max )</small>*@
                            @Html.ValidationMessageFor(e => e.startDate)
                        </div>
                        <div class="col-md-6">
                            @Html.LabelFor(e => e.endDate, "End Date")@Html.TextBoxFor(e => e.endDate, "{0:yyyy-MM-dd}", new { type = "date", @class = "form-control" })
                            @Html.ValidationMessageFor(e => e.endDate)
                        </div>
                        <div class="col-md-6">
                            @Html.LabelFor(e => e.startTime, "Start Time")@Html.TextBoxFor(e => e.startTime, new { type = "time", @class = "form-control" })
                            @Html.ValidationMessageFor(e => e.startTime)
                        </div>
                        <div class="col-md-6">
                            @Html.LabelFor(e => e.endTime, "End Time")@Html.TextBoxFor(e => e.endTime, new { type = "time", @class = "form-control" })
                            @Html.ValidationMessageFor(e => e.endTime)
                        </div>
                    </div>
                    <div class="row mt-4">
                        <div class="col-md-6">
                            @Html.LabelFor(e => e.OrgId, "Organized By")
                            @Html.DropDownListFor(e => e.OrgId, ViewBag.OrganizerList as SelectList, "- Select One -", new { @class = "btn btn-secondary dropdown-toggle" })
                            @Html.ValidationMessageFor(e => e.OrgId)
                        </div>
                        <div class="col-md-6">
                            @Html.LabelFor(e => e.approvalStat, "Approval")
                            <div class="custom-control custom-switch">
                                @Html.CheckBoxFor(e => e.approvalStat, new { @class = "custom-control-input", id = "defaultChecked2" })<label class="custom-control-label" for="defaultChecked2"></label>
                            </div>
                            @Html.ValidationMessageFor(e => e.approvalStat)
                        </div>
                    </div>
                        <div class="mt-5 text-center"><section><button class="btn btn-primary profile-button">Add Event</button></section></div>
                    </div>
                </div>
        </div>
    </div>
</form>



@section foot{

<script>

    function validatePhoto(f) {
        let retype = /^image\/(jpeg|png)$/i;
        let reName = /^.+\.(png|jpg|jpeg)$/i;
        return f &&
            f.size <= 1 * 1024 * 1024 &&
            retype.test(f.type) &&
            reName.test(f.name);
    }

    let src = null;
    $('.upload input').change(e => {
        let f = e.target.files[0];
        let img = $(e.target).siblings('img')[0];

        if (!src) src = img.src;

        if (validatePhoto(f)) {

            img.src = URL.createObjectURL(f);

        } else {
            img.src = src;
            e.target.value = '';
        }

    });

</script>
}

